<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.cuberact</groupId>
        <artifactId>cuberact-parent</artifactId>
        <version>1.0.2</version>
    </parent>

    <artifactId>cuberact-release</artifactId>
    <version>1.3.0</version>
    <packaging>pom</packaging>

    <name>cuberact-release</name>
    <description>parent pom for releasable projects - maven profile release</description>

    <properties>
        <folder.release-data.main>MUST BE OVERRIDDEN</folder.release-data.main>
        <release.package>MUST BE OVERRIDDEN</release.package>
        <release.main-class>MUST BE OVERRIDDEN</release.main-class>

        <release.project>${project.artifactId}</release.project>
        <release.project.name>${project.name}</release.project.name>
        <release.version>${project.version}</release.version>

        <folder.release-data.project>${project.basedir}/release-data</folder.release-data.project>
        <folder.releases>${project.basedir}/releases</folder.releases>

        <release.project.replace.variables.includes>**/version.txt</release.project.replace.variables.includes>
        <release.windows.replace.variables.excludes>project.exe</release.windows.replace.variables.excludes>
        <release.linux.replace.variables.excludes>project.elf,icon.png</release.linux.replace.variables.excludes>
        <release.linux.comment>${project.name}</release.linux.comment>
        <release.linux.category>Development;</release.linux.category>
        <release.mac.replace.variables.excludes>**/project.mach-o,**/icon.icns</release.mac.replace.variables.excludes>
        <release.mac.category>public.app-category.developer-tools</release.mac.category>
        <release.mac.copyright>${project.name} - ${project.organization.name}</release.mac.copyright>

        <release.cleanup>true</release.cleanup>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>RELEASE---RESOLVE-VARIABLES-IN-RESOURCES</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Replace #{variables} in ${project.basedir}/target includes '${release.project.replace.variables.includes}'"/>
                                <replace dir="${project.basedir}/target" includes="${release.project.replace.variables.includes}">
                                    <replacefilter token="#{release.package}" value="${release.package}"/>
                                    <replacefilter token="#{release.main-class}" value="${release.main-class}"/>
                                    <replacefilter token="#{release.project}" value="${release.project}"/>
                                    <replacefilter token="#{release.project.name}" value="${release.project.name}"/>
                                    <replacefilter token="#{release.version}" value="${release.version}"/>
                                </replace>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>RELEASE--CREATE-FAT-JAR</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${release.main-class}</mainClass>
                                </manifest>
                            </archive>
                            <finalName>${release.project}</finalName>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>RELEASE---SHOW_ALL_POSSIBLE_VARIABLES</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="folder.release-data.main = ${folder.release-data.main}"/>
                                        <echo message="folder.release-data.project = ${folder.release-data.project}"/>
                                        <echo message="folder.releases = ${folder.releases}"/>
                                        <echo message="release.package = ${release.package}"/>
                                        <echo message="release.main-class = ${release.main-class}"/>
                                        <echo message="release.project = ${release.project}"/>
                                        <echo message="release.project.name = ${release.project.name}"/>
                                        <echo message="release.version = ${release.version}"/>
                                        <echo message="release.project.replace.variables.includes = ${release.project.replace.variables.includes}"/>
                                        <echo message="release.windows.replace.variables.excludes = ${release.windows.replace.variables.excludes}"/>
                                        <echo message="release.linux.replace.variables.excludes = ${release.linux.replace.variables.excludes}"/>
                                        <echo message="release.linux.comment = ${release.linux.comment}"/>
                                        <echo message="release.linux.category = ${release.linux.category}"/>
                                        <echo message="release.mac.replace.variables.excludes = ${release.mac.replace.variables.excludes}"/>
                                        <echo message="release.mac.category = ${release.mac.category}"/>
                                        <echo message="release.mac.copyright = ${release.mac.copyright}"/>
                                        <echo message="release.cleanup = ${release.cleanup}"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>RELEASE---PRE-RELEASE-ACTIONS</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <unzip src="${project.basedir}/target/${release.project}.jar"
                                               dest="${project.basedir}/target/${release.project}-unzipped"/>
                                        <delete file="${project.basedir}/target/${release.project}.jar"/>
                                        <echo message="Next copy folder is ${project.basedir}/src/main/resources/META-INF/services (overwrite=true)"/>
                                        <copy todir="${project.basedir}/target/${release.project}-unzipped/META-INF/services" overwrite="true" failonerror="false">
                                            <fileset dir="${project.basedir}/src/main/resources/META-INF/services"/>
                                        </copy>
                                        <delete dir="${project.basedir}/target/${release.project}-unzipped/META-INF/maven" failonerror="false"/>
                                        <echo message="Next zip src is ${project.basedir}/target/${release.project}-unzipped"/>
                                        <zip destfile="${project.basedir}/target/${release.project}.jar">
                                            <fileset dir="${project.basedir}/target/${release.project}-unzipped"/>
                                        </zip>
                                        <delete dir="${project.basedir}/target/${release.project}-unzipped"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>RELEASE---LINUX</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="Next copy dir is ${folder.release-data.main}/linux"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}">
                                            <fileset dir="${folder.release-data.main}/linux"/>
                                        </copy>
                                        <echo message="Next copy dir is ${folder.release-data.project}/linux (overwrite=true)"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}"
                                              overwrite="true" failonerror="false">
                                            <fileset dir="${folder.release-data.project}/linux"/>
                                        </copy>
                                        <echo message="Resolving #{variables} in dir ${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project} includes '**' excludes '${release.linux.replace.variables.excludes}'"/>
                                        <replace dir="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}"
                                                 includes="**"
                                                 excludes="${release.linux.replace.variables.excludes}">
                                            <replacefilter token="#{release.package}" value="${release.package}"/>
                                            <replacefilter token="#{release.main-class}" value="${release.main-class}"/>
                                            <replacefilter token="#{release.project}" value="${release.project}"/>
                                            <replacefilter token="#{release.project.name}" value="${release.project.name}"/>
                                            <replacefilter token="#{release.version}" value="${release.version}"/>
                                            <replacefilter token="#{release.linux.comment}" value="${release.linux.comment}"/>
                                            <replacefilter token="#{release.linux.category}" value="${release.linux.category}"/>
                                        </replace>
                                        <echo message="Next move is rename from ${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/project.elf to #{release.project}"/>
                                        <move file="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/project.elf"
                                              tofile="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/${release.project}"/>
                                        <echo message="Next copy file id ${project.basedir}/target/${release.project}.jar"/>
                                        <copy file="${project.basedir}/target/${release.project}.jar"
                                              todir="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}"/>
                                        <unzip src="${folder.release-data.main}/jre/linux-jre-1.8.212.zip"
                                               dest="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}"/>
                                        <chmod file="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/${release.project}"
                                               perm="755"/>
                                        <chmod file="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/install-desktop-entry.sh"
                                               perm="755"/>
                                        <chmod file="${project.basedir}/target/${release.project}-v${release.version}-linux/${release.project}/jre/bin/java"
                                               perm="755"/>
                                        <echo message="Next tar src dir is ${project.basedir}/target/${release.project}-v${release.version}-linux"/>
                                        <tar destfile="${folder.releases}/${release.project}-v${release.version}-linux.tar.gz" compression="gzip">
                                            <tarfileset dir="${project.basedir}/target/${release.project}-v${release.version}-linux" filemode="755">
                                                <include name="${release.project}/${release.project}"/>
                                                <include name="${release.project}/install-desktop-entry.sh"/>
                                                <include name="${release.project}/jre/bin/java"/>
                                            </tarfileset>
                                            <tarfileset dir="${project.basedir}/target/${release.project}-v${release.version}-linux">
                                                <include name="**"/>
                                                <exclude name="${release.project}/${release.project}"/>
                                                <exclude name="${release.project}/install-desktop-entry.sh"/>
                                                <exclude name="${release.project}/jre/bin/java"/>
                                            </tarfileset>
                                        </tar>
                                        <echo message="Release for LINUX successfully completed. File: ${folder.releases}/${release.project}-v${release.version}-linux.tar.gz"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>RELEASE---WINDOWS</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="Next copy dir is ${folder.release-data.main}/windows"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}">
                                            <fileset dir="${folder.release-data.main}/windows"/>
                                        </copy>
                                        <echo message="Next copy dir is ${folder.release-data.project}/windows"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}"
                                              overwrite="true" failonerror="false">
                                            <fileset dir="${folder.release-data.project}/windows"/>
                                        </copy>
                                        <echo message="Resolving #{variables} in dir ${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project} includes '**' excludes '${release.windows.replace.variables.excludes}'"/>
                                        <replace dir="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}"
                                                 includes="**"
                                                 excludes="${release.windows.replace.variables.excludes}">
                                            <replacefilter token="#{release.package}" value="${release.package}"/>
                                            <replacefilter token="#{release.main-class}" value="${release.main-class}"/>
                                            <replacefilter token="#{release.project}" value="${release.project}"/>
                                            <replacefilter token="#{release.project.name}" value="${release.project.name}"/>
                                            <replacefilter token="#{release.version}" value="${release.version}"/>
                                        </replace>
                                        <echo message="Next move is rename from ${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}/project.exe to ${release.project}.exe"/>
                                        <move file="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}/project.exe"
                                              tofile="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}/${release.project}.exe"/>
                                        <echo message="Next copy file is ${project.basedir}/target/${release.project}.jar"/>
                                        <copy file="${project.basedir}/target/${release.project}.jar"
                                              todir="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}"/>
                                        <unzip src="${folder.release-data.main}/jre/windows-jre-1.8.212.zip"
                                               dest="${project.basedir}/target/${release.project}-v${release.version}-windows/${release.project}"/>
                                        <echo message="Next zip src dir is ${project.basedir}/target/${release.project}-v${release.version}-windows"/>
                                        <zip destfile="${folder.releases}/${release.project}-v${release.version}-windows.zip">
                                            <fileset dir="${project.basedir}/target/${release.project}-v${release.version}-windows"/>
                                        </zip>
                                        <echo message="Release for WINDOWS successfully completed. File: ${folder.releases}/${release.project}-v${release.version}-windows.zip"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>RELEASE---MAC</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="Next copy dir is ${folder.release-data.main}/mac"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app">
                                            <fileset dir="${folder.release-data.main}/mac"/>
                                        </copy>
                                        <echo message="Next copy dir is ${folder.release-data.project}/mac"/>
                                        <copy todir="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app"
                                              overwrite="true" failonerror="false">
                                            <fileset dir="${folder.release-data.project}/mac"/>
                                        </copy>
                                        <echo message="Resolving #{variables} in dir ${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app includes '**' excludes '${release.mac.replace.variables.excludes}'"/>
                                        <replace dir="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app"
                                                 includes="**"
                                                 excludes="${release.mac.replace.variables.excludes}">
                                            <replacefilter token="#{release.package}" value="${release.package}"/>
                                            <replacefilter token="#{release.main-class}" value="${release.main-class}"/>
                                            <replacefilter token="#{release.project}" value="${release.project}"/>
                                            <replacefilter token="#{release.project.name}" value="${release.project.name}"/>
                                            <replacefilter token="#{release.version}" value="${release.version}"/>
                                            <replacefilter token="#{release.mac.category}" value="${release.mac.category}"/>
                                            <replacefilter token="#{release.mac.copyright}" value="${release.mac.copyright}"/>
                                        </replace>
                                        <echo message="Next move is rename from ${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/MacOS/project.mach-o to ${release.project}"/>
                                        <move file="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/MacOS/project.mach-o"
                                              tofile="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/MacOS/${release.project}"/>
                                        <echo message="Next copy file is ${project.basedir}/target/${release.project}.jar"/>
                                        <copy file="${project.basedir}/target/${release.project}.jar"
                                              todir="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/Resources"/>
                                        <unzip src="${folder.release-data.main}/jre/mac-jre-1.8.212.zip"
                                               dest="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/Resources"/>
                                        <chmod file="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/MacOS/${release.project}"
                                               perm="755"/>
                                        <chmod file="${project.basedir}/target/${release.project}-v${release.version}-mac/${release.project}.app/Contents/Resources/jre/bin/java"
                                               perm="755"/>
                                        <echo message="Next tar src dir is ${project.basedir}/target/${release.project}-v${release.version}-mac"/>
                                        <tar destfile="${folder.releases}/${release.project}-v${release.version}-mac.tar.gz" compression="gzip">
                                            <tarfileset dir="${project.basedir}/target/${release.project}-v${release.version}-mac" filemode="755">
                                                <include name="${release.project}.app/Contents/MacOS/${release.project}"/>
                                                <include name="${release.project}.app/Contents/Resources/jre/bin/java"/>
                                            </tarfileset>
                                            <tarfileset dir="${project.basedir}/target/${release.project}-v${release.version}-mac">
                                                <include name="**"/>
                                                <exclude name="${release.project}.app/Contents/MacOS/${release.project}"/>
                                                <exclude name="${release.project}.app/Contents/Resources/jre/bin/java"/>
                                            </tarfileset>
                                        </tar>
                                        <echo message="Release for MAC successfully completed. File: ${folder.releases}/${release.project}-v${release.version}-mac.tar.gz"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>RELEASE---CLEANUP-TARGET-AFTER-RELEASE</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target if="${release.cleanup}">
                                        <delete dir="${project.basedir}/target/${release.project}-v${release.version}-linux" failonerror="false"/>
                                        <delete dir="${project.basedir}/target/${release.project}-v${release.version}-windows" failonerror="false"/>
                                        <delete dir="${project.basedir}/target/${release.project}-v${release.version}-mac" failonerror="false"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>